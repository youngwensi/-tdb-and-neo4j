1） 从数据规模来说：
随着业务的发展，schema复杂性会增加，数据量以及分类体系也会日益增长，从schema的灵活性和支撑的数据规模来说，Neo4j要比TDB更合适。Neo4j可支持10亿数量内的实体和关系且Schema可以较为灵活编排。

2） 对于搜索推荐来说：
如果需要查询实体共现关系，如实体与实体的共现，查找父子兄弟结点等的路径，Neo4j更为合适；如果仅是通过资源找资源类型的，类似于百科，将资源如图片文档放在一起组织起来搜索也是可以用TDB的。
TDB 查询语言Sparql不支持路径搜索，即给定图上两个节点，Sparql不能自动找出两节点间的所有路径或最短/长路径，仅能做到判断两节点是否相连。
Jena的边不带属性，举例，假设在tdb中可以记录“4G”和“LTE”有近义的关系，但是无法在近义关系的这条边上再记录近义分数。但Neo4j中的边是可以带属性的。

3） 从推理功能来说：
RDF模型语义完备，TDB 支持RDFS 推理机制和OWL推理机制，并提供通用推理引擎，推理计算比较成熟。Neo4j要自己写推理逻辑过程，将推理过程转化为cypher语言操作,在小规模的数据集上使用固定的模式推理，Jena更具有优势。如果数据量较大，jena打开推理引擎后，查询速度极慢，因为推理引擎需要将数据全量载入内存。因此，jena只支持小数据集上图谱推理，性能有瓶颈，并且还需要做一整套的工具链，成本较高。这也导致大家通常在学术界使用RDF模型，工业界都在用属性图模型。此外，Neo4j目前有个插件neosemantics (n10s)可支持部分推理功能。 https://neo4j.com/labs/neosemantics/

二、从数据库的功能分析



三、从业界使用情况分析

整个业界—以官网Score分数表示(https://db-engines.com/en/system/Apache+Jena+-+TDB%3BNeo4j)

Jena-TDB：2.90分；Neo4j:58.25分

Score计算考虑的参数有如下：

1）网站上提到该系统的次数，以搜索引擎（google和必应）查询中的结果数量衡量。

2）对该系统的普遍兴趣。使用Google趋势中对该系统的搜索频率。

3）关于该系统的技术讨论频率。著名的IT问答网站Stack Overflow和DBA Stack Exchange上提及该系统的数量和感兴趣的用户数量。

4）提到了该系统的工作机会的数量。统计工作搜索引擎上的与该系统相关的报价数量和雇佣数量。

5）专业网络中提到系统的配置文件数量。使用国际上最受欢迎的专业网络LinkedIn。

6）社交网络中的相关性。计算提到了该系统的Twitter推文的数量。
